{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/hook/react-hook-basic/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport './components/ColorBox.scss';\nimport ColorBox from './components/ColorBox';\nimport { useEffect, useState } from 'react';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport PostList from './components/PostList';\nimport PostFilltersForm from './components/PostFilltersForm';\nimport Clock from './components/Clock';\nimport MagicBox from './components/MagicBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    title: \"title One\"\n  }, {\n    id: 2,\n    title: \"title Two\"\n  }, {\n    id: 3,\n    title: \"title Three\"\n  }]);\n  const [postList, setPostList] = useState([]);\n  useEffect(() => {\n    console.log(\"2\");\n\n    async function fetchPostList() {\n      try {\n        console.log(\"4\");\n        const requesturl = 'https://jsonplaceholder.typicode.com/posts';\n        const response = await fetch(requesturl);\n        console.log(\"llllll\", response);\n        const responseJSON = await response.json();\n        console.log(\"ahihi\", {\n          responseJSON\n        });\n        const data = responseJSON.data;\n        const title = responseJSON;\n        console.log(title);\n        console.log(\"6\");\n        setPostList(responseJSON);\n      } catch (error) {\n        console.log('đã bị lỗi: ', error);\n      }\n    }\n\n    fetchPostList();\n  }, []); // useEffect(() => {\n  //   console.log(\"4\");\n  // });\n\n  function handleTodoClick(todo) {\n    console.log(todo);\n    let index = todoList.findIndex(x => x.id === todo.id);\n    if (index < 0) return;\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1);\n    return setTodoList(newTodoList);\n  }\n\n  function handleTodoFormSubmit(formValues) {\n    // console.log('Form submit:' + JSON.stringify(formValues)+formValues.title);\n    console.log(\"From submit: \", formValues);\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues\n    };\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList);\n    return handleTodoClick;\n  }\n\n  function inputChange(textInput) {\n    console.log(\"show text input: \", textInput);\n  } // console.log(\"kkkkkkk\",postList);\n\n\n  const [showClock, setShowClock] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MagicBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bP7WXxHpypJ16k+rxROZrMOaGpU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Data/hook/react-hook-basic/src/App.js"],"names":["ColorBox","useEffect","useState","TodoList","TodoForm","PostList","PostFilltersForm","Clock","MagicBox","App","todoList","setTodoList","id","title","postList","setPostList","console","log","fetchPostList","requesturl","response","fetch","responseJSON","json","data","error","handleTodoClick","todo","index","findIndex","x","newTodoList","splice","handleTodoFormSubmit","formValues","newTodo","length","push","inputChange","textInput","showClock","setShowClock"],"mappings":"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","sourcesContent":["import './App.scss';\nimport './components/ColorBox.scss';\nimport ColorBox from './components/ColorBox';\nimport { useEffect, useState } from 'react';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport PostList from './components/PostList';\nimport PostFilltersForm from './components/PostFilltersForm';\nimport Clock from './components/Clock';\nimport MagicBox from './components/MagicBox';\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([\n    {id:1,title:\"title One\"},\n    {id:2,title:\"title Two\"},\n    {id:3,title:\"title Three\"},\n  ])\n  const [postList, setPostList] = useState([])\n  useEffect(() => {\n\n      console.log(\"2\");\n    async function fetchPostList (){\n\n      try {\n        console.log(\"4\");\n        const requesturl = 'https://jsonplaceholder.typicode.com/posts';\n        const response = await fetch(requesturl);\n        console.log(\"llllll\",response);\n        const responseJSON = await response.json();\n        console.log(\"ahihi\",{responseJSON});\n\n        const data = responseJSON.data\n\n        const title = responseJSON;\n        console.log(title);\n        console.log(\"6\");\n        setPostList(responseJSON);\n      } catch (error) {\n        console.log('đã bị lỗi: ',error);\n      }\n    }\n    fetchPostList();\n  },[])\n  // useEffect(() => {\n  //   console.log(\"4\");\n  // });\n  function handleTodoClick(todo){\n    console.log(todo);\n    let index = todoList.findIndex(x => x.id === todo.id);\n    if(index < 0) return;\n    const newTodoList = [...todoList];\n    newTodoList.splice(index,1); \n    return setTodoList(newTodoList);\n\n  }\n  function handleTodoFormSubmit(formValues){\n    // console.log('Form submit:' + JSON.stringify(formValues)+formValues.title);\n    console.log(\"From submit: \",formValues);\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues\n    }\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList)\n    return handleTodoClick;\n  }\n  function inputChange(textInput){\n    console.log(\"show text input: \",textInput);\n  }\n  // console.log(\"kkkkkkk\",postList);\n  const [showClock, setShowClock] = useState(true);\n  return (\n    \n    <div className=\"app\">\n      <h1>React Hook</h1>\n      <MagicBox/>\n      {/* {showClock && <Clock/>}\n      <button onClick={() => setShowClock(false)}>Ẩn đồng hồ</button> */}\n      {/* <PostFilltersForm onSubmit={inputChange}/>\n      <PostList posts={postList}/> */}\n      {/* <TodoForm onSubmit={(formValues) => handleTodoFormSubmit(formValues)}/>\n      <TodoList todos={todoList} onTodoCLick={handleTodoClick}/> */}\n    </div>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}