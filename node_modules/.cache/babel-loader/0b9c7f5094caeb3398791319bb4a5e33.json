{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction colorRandom(colorCurrent) {\n  const COLORLIST = ['green', 'red', 'blue', 'yellow'];\n  const colorRefIndex = COLORLIST.indexOf(colorCurrent); // let random = Math.trunc(Math.random() * 4);\n\n  let random = colorRefIndex;\n\n  while (random === colorRefIndex) {\n    random = Math.trunc(Math.random() * 4);\n  } // const colorFinal = COLORLIST[random];\n\n\n  console.log(COLORLIST[random]);\n  return COLORLIST[random];\n}\n\nfunction useMagicColor(props) {\n  _s();\n\n  const [color, setColor] = useState('transparent');\n  const colorRef = useRef('transparent');\n  useEffect(() => {\n    const timeOutColor = setInterval(() => {\n      const newColor = colorRandom(colorRef.current);\n      setColor(newColor);\n      colorRef.current = newColor;\n      console.log();\n    }, 1000);\n    return () => {\n      clearInterval(timeOutColor);\n    };\n  }, []);\n  return color;\n}\n\n_s(useMagicColor, \"LHFLQmXLilJod3+lDlN+jcjcbII=\");\n\nexport default useMagicColor;","map":{"version":3,"sources":["/Volumes/Data/hook/react-hook-basic/src/hooks/useMagicColor.js"],"names":["React","useEffect","useRef","useState","PropTypes","colorRandom","colorCurrent","COLORLIST","colorRefIndex","indexOf","random","Math","trunc","console","log","useMagicColor","props","color","setColor","colorRef","timeOutColor","setInterval","newColor","current","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,SAASC,WAAT,CAAqBC,YAArB,EAAkC;AAC9B,QAAMC,SAAS,GAAG,CAAC,OAAD,EAAS,KAAT,EAAe,MAAf,EAAsB,QAAtB,CAAlB;AACA,QAAMC,aAAa,GAAGD,SAAS,CAACE,OAAV,CAAkBH,YAAlB,CAAtB,CAF8B,CAI9B;;AACA,MAAII,MAAM,GAAGF,aAAb;;AACA,SAAME,MAAM,KAAKF,aAAjB,EAA+B;AAC1BE,IAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,CAA3B,CAAT;AACJ,GAR6B,CAS9B;;;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACG,MAAD,CAArB;AACA,SAAOH,SAAS,CAACG,MAAD,CAAhB;AACH;;AAED,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,aAAD,CAAlC;AACA,QAAMgB,QAAQ,GAAGjB,MAAM,CAAC,aAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,YAAY,GAAGC,WAAW,CAAC,MAAK;AAClC,YAAMC,QAAQ,GAAGjB,WAAW,CAACc,QAAQ,CAACI,OAAV,CAA5B;AACAL,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACAH,MAAAA,QAAQ,CAACI,OAAT,GAAmBD,QAAnB;AACAT,MAAAA,OAAO,CAACC,GAAR;AACH,KAL+B,EAK9B,IAL8B,CAAhC;AAMA,WAAO,MAAM;AACTU,MAAAA,aAAa,CAACJ,YAAD,CAAb;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOH,KAAP;AACH;;GAhBQF,a;;AAkBT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction colorRandom(colorCurrent){\n    const COLORLIST = ['green','red','blue','yellow'];\n    const colorRefIndex = COLORLIST.indexOf(colorCurrent)\n    \n    // let random = Math.trunc(Math.random() * 4);\n    let random = colorRefIndex;\n    while(random === colorRefIndex){\n         random = Math.trunc(Math.random() * 4);\n    }\n    // const colorFinal = COLORLIST[random];\n\n\n    console.log(COLORLIST[random]);\n    return COLORLIST[random];\n}\n\nfunction useMagicColor(props) {\n    const [color, setColor] = useState('transparent');\n    const colorRef = useRef('transparent');\n    useEffect(() => {\n        const timeOutColor = setInterval(() =>{\n            const newColor = colorRandom(colorRef.current);\n            setColor(newColor);\n            colorRef.current = newColor;\n            console.log();\n        },1000)\n        return () => {\n            clearInterval(timeOutColor);\n        };\n    }, []);\n\n    return color;\n}\n\nexport default useMagicColor;"]},"metadata":{},"sourceType":"module"}